{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","hashValue","setHashValue","className","onChange","e","value","md5Hash","CryptoJS","MD5","toString","handleChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oiBAsCeA,MAjCf,WAEE,MAAkCC,mBAAiB,IAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KAOA,OACE,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,mBAAGA,UAAU,iBADf,mBAGA,sBAAKA,UAAU,eAAf,UACE,mBAAGA,UAAU,sBADf,kBAIF,qBAAKA,UAAU,YAAf,SACA,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,UAAf,UACE,8CACA,uBAAOA,UAAU,cAEnB,8BAAMF,IACN,uBAAOG,SAAU,SAACC,GAAD,OAtBvB,SAAsBC,GACpB,IAAIC,EAAUC,IAASC,IAAIH,GAC3BJ,EAAaK,EAAQG,YAoBYC,CAAaN,EAAEO,OAAON,QAAQH,UAAU,0BCjB9DU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.681cf05f.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport CryptoJS from 'crypto-js';\n\n\nfunction App() {\n\n  const [hashValue, setHashValue] = useState<string>('')\n\n  function handleChange(value: string) {\n    var md5Hash = CryptoJS.MD5(value);\n    setHashValue(md5Hash.toString());\n  }\n\n  return (\n    <div className=\"flex\">\n      <nav className=\"sidebar\">\n        <div className=\"sidebar-item active\">\n          <i className=\"fab fa-slack\"></i> Transactions\n        </div>\n        <div className=\"sidebar-item\">\n          <i className=\"fab fa-slack-hash\"></i> MD5 Hash\n        </div>\n      </nav>\n      <div className=\"flex-grow\">\n      <div className=\"h-screen\">\n        <div className=\"heading\">\n          <h1>Transactions</h1>\n          <input className=\"search\"/>\n        </div>\n        <div>{hashValue}</div>\n        <input onChange={(e: any) => handleChange(e.target.value)} className=\"form-control\"/>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}