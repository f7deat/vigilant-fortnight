{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","messages","setMessages","message","setMessage","handleChat","newMessages","push","type","className","map","value","index","onChange","e","target","onKeyPress","key","handleEnter","onClick","packageJson","version","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAuEeA,MAlEf,WAEE,MAAgCC,mBAAqB,IAArD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAiB,IAA/C,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAa,WACjB,IAAIC,EAAW,YAAOL,GACtBK,EAAYC,KAAK,CACfJ,QAASA,EACTK,MAAM,IAERN,EAAYI,GACZF,EAAW,KASb,OACE,8BACE,sBAAKK,UAAU,OAAf,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,mBAAGA,UAAU,iBADf,mBAGA,sBAAKA,UAAU,eAAf,UACE,mBAAGA,UAAU,sBADf,kBAIF,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,UAAf,gBAEIR,QAFJ,IAEIA,OAFJ,EAEIA,EAAUS,KAAI,SAACC,EAAiBC,GAAlB,OACZ,8BAAkBD,EAAMR,SAAdS,QAIhB,qBAAKH,UAAU,YAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,uBAAOA,UAAU,aAAaE,MAAOR,EAASU,SAAU,SAACC,GAAD,OAAYV,EAAWU,EAAEC,OAAOJ,QAAQK,WAAY,SAACF,GAAD,OA7B5H,SAAqBA,GACL,UAAVA,EAAEG,KACJZ,IA2BoIa,CAAYJ,MACpI,wBAAQL,UAAU,WAAWU,QAASd,EAAtC,SAAkD,mBAAGI,UAAU,iCAIrE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,QAAf,UACE,8CACA,gCAAQW,EAAYC,aAEtB,sBAAKZ,UAAU,iBAAf,UACE,uBAAOA,UAAU,SAASa,YAAY,wBACtC,mBAAGb,UAAU,mCC/Cdc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4e6cd2fa.chunk.js","sourcesContent":["import './App.css';\nimport packageJson from '../package.json';\nimport { useState } from 'react';\nimport IMessage from './models/message';\n\nfunction App() {\n\n  const [messages, setMessages] = useState<IMessage[]>([])\n  const [message, setMessage] = useState<string>('')\n\n  const handleChat = () => {\n    let newMessages = [...messages]\n    newMessages.push({\n      message: message,\n      type: true\n    })\n    setMessages(newMessages)\n    setMessage('')\n  }\n\n  function handleEnter(e:any) {\n    if (e.key === 'Enter') {\n      handleChat()\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"flex\">\n        <nav className=\"sidebar\">\n          <div className=\"sidebar-item active\">\n            <i className=\"fab fa-slack\"></i> Transactions\n          </div>\n          <div className=\"sidebar-item\">\n            <i className=\"fab fa-slack-hash\"></i> MD5 Hash\n          </div>\n        </nav>\n        <div className=\"flex-grow\">\n          <div className=\"flex\">\n            <div className=\"board\">\n              <div className=\"message\">\n                {\n                  messages?.map((value: IMessage, index: number) => (\n                    <div key={index}>{value.message}</div>\n                  ))\n                }\n              </div>\n              <div className=\"chat-area\">\n                <div className=\"chat-input-wrapper\">\n                  <input className=\"chat-input\" value={message} onChange={(e: any) => setMessage(e.target.value)} onKeyPress={(e: any) => handleEnter(e)}/>\n                  <button className=\"btn-send\" onClick={handleChat}><i className=\"far fa-paper-plane\"></i></button>\n                </div>\n              </div>\n            </div>\n            <div className=\"heading\">\n              <div className=\"title\">\n                <h1>Transactions</h1>\n                <small>{packageJson.version}</small>\n              </div>\n              <div className=\"search-wrapper\">\n                <input className=\"search\" placeholder=\"Search something...\" />\n                <i className=\"fas fa-search\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}